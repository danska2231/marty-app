{"ast":null,"code":"import axios from \"axios\"; //componentes\n\nconst dataIni = {\n  array: [],\n  page: 1\n}; //type\n\nconst obtenerRm = 'obtenerRm';\nconst sig_obtenerRm = ' sig_obtenerRm'; //reducer\n\nexport default function rmReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : dataIni;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case obtenerRm:\n      return { ...state,\n        array: action.payload\n      };\n\n    case sig_obtenerRm:\n      return { ...state,\n        array: action.payload.array,\n        page: action.p\n      };\n\n    default:\n      return state;\n  }\n} //acciones\n\nexport const obtermAccion = () => async (dispatch, getState) => {\n  const page = getState().personajes.page;\n\n  try {\n    const res = await axios.get(`https://rickandmortyapi.com/api/character?page=${page}`);\n    dispatch({\n      type: obtenerRm,\n      payload: res.data.results\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const siguienteList = () => async (dispatch, getState) => {\n  const page = getState().personajes.page;\n  const siguiente = page + 1;\n\n  try {\n    const res = await axios.get(`https://rickandmortyapi.com/api/character?page=${siguiente}`);\n    dispatch({\n      type: sig_obtenerRm,\n      payload: {\n        array: res.data.results,\n        page: siguiente\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/d_b_o/Desktop/dev_dan/r_m/src/redux/r_mDucks.js"],"names":["axios","dataIni","array","page","obtenerRm","sig_obtenerRm","rmReducer","state","action","type","payload","p","obtermAccion","dispatch","getState","personajes","res","get","data","results","error","console","log","siguienteList","siguiente"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,KAAK,EAAG,EADI;AAEZC,EAAAA,IAAI,EAAG;AAFK,CAAhB,C,CAKA;;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,aAAa,GAAG,gBAAtB,C,CACA;;AAEA,eAAe,SAASC,SAAT,GAA6C;AAAA,MAAzBC,KAAyB,uEAAjBN,OAAiB;AAAA,MAARO,MAAQ;;AACxD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKL,SAAL;AACI,aAAO,EAAC,GAAGG,KAAJ;AAAWL,QAAAA,KAAK,EAAEM,MAAM,CAACE;AAAzB,OAAP;;AACJ,SAAKL,aAAL;AACI,aAAO,EAAC,GAAGE,KAAJ;AAAWL,QAAAA,KAAK,EAAEM,MAAM,CAACE,OAAP,CAAeR,KAAjC;AAAwCC,QAAAA,IAAI,EAAEK,MAAM,CAACG;AAArD,OAAP;;AACA;AACA,aAAOJ,KAAP;AANR;AAUH,C,CAED;;AACA,OAAO,MAAMK,YAAY,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC5D,QAAMX,IAAI,GAAGW,QAAQ,GAAGC,UAAX,CAAsBZ,IAAnC;;AAEA,MAAI;AACA,UAAMa,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAY,kDAAiDd,IAAK,EAAlE,CAAlB;AACAU,IAAAA,QAAQ,CAAE;AACNJ,MAAAA,IAAI,EAAEL,SADA;AAENM,MAAAA,OAAO,EAAEM,GAAG,CAACE,IAAJ,CAASC;AAFZ,KAAF,CAAR;AAIH,GAND,CAOA,OAAOC,KAAP,EAAa;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AAEJ,CAdM;AAgBP,OAAO,MAAMG,aAAa,GAAG,MAAM,OAAOV,QAAP,EAAiBC,QAAjB,KAA6B;AAC5D,QAAMX,IAAI,GAAGW,QAAQ,GAAGC,UAAX,CAAsBZ,IAAnC;AACA,QAAMqB,SAAS,GAAGrB,IAAI,GAAC,CAAvB;;AAEA,MAAI;AACA,UAAMa,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAY,kDAAiDO,SAAU,EAAvE,CAAlB;AACAX,IAAAA,QAAQ,CAAE;AACNJ,MAAAA,IAAI,EAAGJ,aADD;AAENK,MAAAA,OAAO,EAAE;AACLR,QAAAA,KAAK,EAAGc,GAAG,CAACE,IAAJ,CAASC,OADZ;AAELhB,QAAAA,IAAI,EAAEqB;AAFD;AAFH,KAAF,CAAR;AAOH,GATD,CAUA,OAAOJ,KAAP,EAAa;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AAEJ,CAlBM","sourcesContent":["import axios from \"axios\"\r\n\r\n//componentes\r\n\r\nconst dataIni = {\r\n    array : [],\r\n    page : 1\r\n}\r\n\r\n//type\r\nconst obtenerRm = 'obtenerRm'\r\nconst sig_obtenerRm = ' sig_obtenerRm'\r\n//reducer\r\n\r\nexport default function rmReducer (state = dataIni, action) {\r\n    switch(action.type){\r\n        case obtenerRm :\r\n            return {...state, array: action.payload}\r\n        case sig_obtenerRm: \r\n            return {...state, array: action.payload.array, page: action.p} \r\n            default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\n//acciones\r\nexport const obtermAccion = () => async (dispatch, getState) => {\r\n    const page = getState().personajes.page\r\n    \r\n    try {\r\n        const res = await axios.get (`https://rickandmortyapi.com/api/character?page=${page}`)\r\n        dispatch ({\r\n            type: obtenerRm, \r\n            payload: res.data.results\r\n        })\r\n    }\r\n    catch (error){\r\n        console.log(error);\r\n    }\r\n\r\n}\r\n\r\nexport const siguienteList = () => async (dispatch, getState) =>{\r\n    const page = getState().personajes.page\r\n    const siguiente = page+1\r\n    \r\n    try {\r\n        const res = await axios.get (`https://rickandmortyapi.com/api/character?page=${siguiente}`)\r\n        dispatch ({\r\n            type:  sig_obtenerRm, \r\n            payload :{ \r\n                array : res.data.results,\r\n                page: siguiente\r\n            }\r\n            })\r\n    }\r\n    catch (error){\r\n        console.log(error);\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}